{
  "openapi": "3.0.1",
  "info": {
    "title": "Ecommerce Management API",
    "description": "This api aims to simulate the operation of an e-commerce for learning and obtaining grades in the web 2 programming discipline.",
    "contact": {
      "email": "igor.carvalho@icomp.ufam.edu.br"
    },
    "version": "1.0.0"
  },
  "servers": [{
    "url": "http://localhost:3020/",
    "description": "Test API"
  }],
  "paths": {
    "/products": {
      "get": {
        "summary": "Registered products",
        "description": "This route is responsible for listing all products registered in the database",
        "tags": ["Products"],
        "responses": {
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Product registration",
        "description": "This route is responsible for registering a product in the database",
        "tags": ["Products"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "summary": "Find the product by id",
        "description": "This route is responsible for making a search for the product given its id",
        "tags": ["Products"],
        "parameters": [{
          "name": "productId",
          "in": "path",
          "description": "Id of product to return",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NotFoundProductMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update the product by id",
        "description": "This route is responsible for updating the product data given its id",
        "tags": ["Products"],
        "parameters": [{
          "name": "productId",
          "in": "path",
          "description": "Id of product to update",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NotFoundProductMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Updated product"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the product by id",
        "description": "This route is responsible for deleting the product given its id",
        "tags": ["Products"],
        "parameters": [{
          "name": "productId",
          "in": "path",
          "description": "Id of product to remove",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NotFoundProductMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Deleted product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/upload-file/{productId}": {
      "post": {
        "tags": ["Products"],
        "summary": "Uploads a file to respective product",
        "description": "This route is responsible for uploading product images, saving in the `public/uploads/{productId}` directory",
        "parameters": [{
          "name": "productId",
          "in": "path",
          "description": "Id of product",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "File uploded"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NotFoundProductMsg"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Registered users",
        "description": "This route is responsible for listing all users registered in the database",
        "tags": ["Users"],
        "responses": {
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "User registration",
        "description": "This route is responsible for registering a user in the database",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Find the user by id",
        "description": "This route is responsible for making a search for the user given its id",
        "tags": ["Users"],
        "parameters": [{
          "name": "userId",
          "in": "path",
          "description": "Id of user to return",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NotFoundUserMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update the user by id",
        "description": "This route is responsible for updating the user data given its id",
        "tags": ["Users"],
        "parameters": [{
          "name": "userId",
          "in": "path",
          "description": "Id of user to update",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NotFoundUserMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Updated user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the user by id",
        "description": "This route is responsible for deleting the user given its id",
        "tags": ["Users"],
        "parameters": [{
          "name": "userId",
          "in": "path",
          "description": "Id of user to remove",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NotFoundUserMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Deleted user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mouse wireless"
          },
          "price": {
            "type": "number",
            "example": 56.75
          },
          "inventory": {
            "type": "integer",
            "example": 300
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "userTypeId": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "User name"
          },
          "email": {
            "type": "string",
            "example": "user_name@domain.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          }
        }
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mouse wireless"
          },
          "price": {
            "type": "string",
            "example": "56.75"
          },
          "inventory": {
            "type": "integer",
            "example": 300
          },
          "createdAt": {
            "type": "string",
            "example": "2021-10-11T17:41:22.000Z"

          },
          "updatedAt": {
            "type": "string",
            "example": "2021-10-11T18:49:46.000Z"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "userTypeId": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "User name"
          },
          "email": {
            "type": "string",
            "example": "user_name@domain.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          },
          "createdAt": {
            "type": "string",
            "example": "2021-10-11T17:41:22.000Z"

          },
          "updatedAt": {
            "type": "string",
            "example": "2021-10-11T18:49:46.000Z"
          }
        }
      },
      "NotFoundProductMsg": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Product not found"
          }
        }
      },
      "NotFoundUserMsg": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "User not found"
          }
        }
      }
    }
  }
}